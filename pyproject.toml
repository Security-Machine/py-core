[project]
dynamic = ["version"]
name = "security-machine"
# version = "0.0.1"
authors = [{name = "Nicu Tofan", email = "nicu.tofan@gmail.com"}]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = [
  "SQLAlchemy==2.0.23",
  "alembic==1.12.1",
  "db4me>=0.1.0",
  "attrs==23.1.0",
  "aiosqlite==0.19.0",
]
description = "A http server providing base for authenthication and authorization."
readme = "README.md"
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
  "black",
  "build",
  "flake8",
  "isort",
  "mypy",
  "pre-commit",
  "pyproject-flake8",
  "pytest-cov",
  "pytest-mock",
  "pytest",
  "twine",
  "wheel",
]
docs = [
  "cairosvg",
  "markdown-include",
  "mkdocs-material",
  "mkdocs-material[imaging]",
  "mkdocs",
  "mkdocstrings",
  "mkdocstrings[python]",
  "pillow",
  "pymdown-extensions",
]
server = [
  "fastapi==0.104.1",
  "log2me>=0.1.0",
  "passlib[bcrypt]==1.7.4",
  "pydantic_settings==2.1.0",
  "pydantic-settings-yaml==0.2.0",
  "pydantic==2.5.2",
  "python-jose[cryptography]==3.3.0",
  "python-multipart==0.0.6",
  "uvicorn[standard]",
]
tests = [
  "black",
  "flake8",
  "isort",
  "mypy",
  "pyproject-flake8",
  "pytest-cov",
  "pytest-mock",
  "pytest",
  "twine",
  "uvicorn[standard]",
  "wheel",
]

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=67.0", "setuptools_scm[toml]>=8"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["venv*", "playground*"]

[tool.setuptools_scm]
fallback_version = "0.0.1-dev"
write_to = "secma_core/__version__.py"

[tool.isort]

# Make isort compatible with black
profile = "black"

known_first_party = "secma_core"
skip = [
  "test_*.py",
  "*_test.py",
  "tests_*.py",
  "*_tests.py",
  "spec_*.py",
  "*_spec.py",
  "specs_*.py",
  "*_specs.py",
]
src_paths = "secma_core"

[tool.black]

# Standard black line length is 88
line-length = 79

# Python versions that should be supported by Black's output
target-version = ['py39', 'py310', 'py311']

[tool.pytest.ini_options]
python_classes = ["Test", "Acceptance"]
python_files = [
  "test_*.py",
  "*_test.py",
  "tests_*.py",
  "*_tests.py",
  "spec_*.py",
  "*_spec.py",
  "specs_*.py",
  "*_specs.py",
]
python_functions = ["test"]
testpaths = [
  "secma_core",
]

[tool.mypy]
exclude = [
  ".+_tests?.py",
  "tests?_.+",
  ".+_specs?.py",
  "specs?_.+",
]
ignore_missing_imports = true

[tool.flake8]
docstring-convention = "google"
exclude = [
  "test_*.py",
  "*_test.py",
  "tests_*.py",
  "*_tests.py",
  "spec_*.py",
  "*_spec.py",
  "specs_*.py",
  "*_specs.py",
]
extend-ignore = "E203, E501, E704"
max-line-length = 79
